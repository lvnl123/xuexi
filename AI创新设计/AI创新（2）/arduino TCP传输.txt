#include "esp_camera.h"
#include <WiFi.h>

// ===================
// Select camera model
// ===================
#define CAMERA_MODEL_AI_THINKER // Has PSRAM
#include "camera_pins.h"

// ===========================
// Enter your WiFi credentials
// ===========================
const char *ssid = "Xiaomi 15 Pro";       // 替换为你的 WiFi 名称
const char *password = "xiaomi15pro";     // 替换为你的 WiFi 密码

// TCP Server 配置
WiFiServer server(8080);                  // 监听端口 8080

void setup() {
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  Serial.println();

  // 初始化摄像头
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;  // JPEG 格式适合流传输
  config.frame_size = FRAMESIZE_VGA;    // 分辨率：320x240
  config.jpeg_quality = 12;              // 图像质量（1-63，数值越小质量越高）
  config.fb_count = 2;                   // 帧缓冲区数量

  // 如果 PSRAM 存在，使用更高分辨率和质量
  if (psramFound()) {
    config.jpeg_quality = 10;
    config.fb_count = 2;
  }

  // 初始化摄像头
  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("摄像头初始化失败: 0x%x", err);
    return;
  }

  // 连接到 WiFi
  WiFi.begin(ssid, password);
  WiFi.setSleep(false);

  Serial.print("WiFi 正在连接...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi 已连接");

  // 启动 TCP 服务器
  server.begin();
  Serial.print("TCP 服务器已启动，请使用地址: ");
  Serial.print(WiFi.localIP());
  Serial.println(":8080");
}

void loop() {
  // 检查是否有客户端连接
  WiFiClient client = server.available();
  if (client) {
    Serial.println("客户端已连接");

    // 捕获一帧图像
    camera_fb_t *fb = esp_camera_fb_get();
    if (!fb) {
      Serial.println("捕获图像失败");
      client.stop();
      return;
    }

    // 发送图像大小
    uint32_t img_size = fb->len;
    client.write((uint8_t*)&img_size, sizeof(img_size));
    Serial.printf("已发送图像大小：%d 字节\n", img_size);

    // 发送图像数据
    client.write(fb->buf, fb->len);
    Serial.printf("已发送图像数据：%d 字节\n", fb->len);

    // 释放图像缓冲区
    esp_camera_fb_return(fb);

    // 关闭客户端连接
    client.stop();
    Serial.println("客户端已断开");
  }
}