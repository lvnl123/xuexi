import sys
from PySide6.QtWidgets import (
    QApplication, QMainWindow, QVBoxLayout, QHBoxLayout, QWidget, QLabel, QLineEdit, QPushButton,
    QTableWidget, QTableWidgetItem, QCheckBox
)
from PySide6.QtCore import Qt
from PySide6.QtGui import QFont


# 示例数据
data_list = [
    {"姓名": "孙水东", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "原小青", "性别": "女", "身高": 165, "体重": 55, "800米": 200, "坐位体前屈": 20, "立定跳远": 190, "仰卧起坐": 30, "50米": 8.5, "肺活量": 3100},
    {"姓名": "焦淑涛", "性别": "男", "身高": 180, "体重": 75, "1000米": 220, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "潘凡运", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "刁丛勇", "性别": "男", "身高": 178, "体重": 80, "1000米": 225, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "兰娉婧", "性别": "女", "身高": 168, "体重": 58, "800米": 210, "坐位体前屈": 22, "立定跳远": 180, "仰卧起坐": 35, "50米": 9.0, "肺活量": 2900},
    {"姓名": "胡英莲", "性别": "女", "身高": 185, "体重": 85, "800米": 215, "坐位体前屈": 14, "立定跳远": 260, "仰卧起坐": 18, "50米": 7.2, "肺活量": 3300},
    {"姓名": "唐雅丹", "性别": "女", "身高": 160, "体重": 50, "800米": 220, "坐位体前屈": 25, "立定跳远": 170, "仰卧起坐": 40, "50米": 9.5, "肺活量": 3000},
    {"姓名": "阎小艳", "性别": "女", "身高": 190, "体重": 90, "800米": 225, "坐位体前屈": 11, "立定跳远": 270, "仰卧起坐": 20, "50米": 7.6, "肺活量": 3400},
    {"姓名": "李荣泽", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "鄢运六", "性别": "男", "身高": 176, "体重": 72, "1000米": 215, "坐位体前屈": 16, "立定跳远": 235, "引体向上": 13, "50米": 7.4, "肺活量": 4300},
    {"姓名": "聂艳丰", "性别": "女", "身高": 167, "体重": 56, "800米": 205, "坐位体前屈": 21, "立定跳远": 195, "仰卧起坐": 32, "50米": 8.4, "肺活量": 3150},
    {"姓名": "贺桃洪", "性别": "男", "身高": 182, "体重": 78, "1000米": 220, "坐位体前屈": 13, "立定跳远": 245, "引体向上": 11, "50米": 7.7, "肺活量": 4500},
    {"姓名": "喻喜良", "性别": "男", "身高": 171, "体重": 61, "1000米": 230, "坐位体前屈": 19, "立定跳远": 205, "引体向上": 26, "50米": 8.1, "肺活量": 3750},
    {"姓名": "梅志能", "性别": "男", "身高": 179, "体重": 82, "1000米": 225, "坐位体前屈": 11, "立定跳远": 255, "引体向上": 16, "50米": 7.9, "肺活量": 4000},
    {"姓名": "聂明中", "性别": "男", "身高": 169, "体重": 59, "1000米": 235, "坐位体前屈": 23, "立定跳远": 185, "引体向上": 36, "50米": 8.9, "肺活量": 3800},
    {"姓名": "晏运胜", "性别": "男", "身高": 186, "体重": 86, "1000米": 210, "坐位体前屈": 15, "立定跳远": 265, "引体向上": 19, "50米": 7.3, "肺活量": 4700},
    {"姓名": "陈亚峰", "性别": "男", "身高": 162, "体重": 52, "1000米": 240, "坐位体前屈": 24, "立定跳远": 175, "引体向上": 41, "50米": 9.4, "肺活量": 3600},
    {"姓名": "邓方秀", "性别": "女", "身高": 191, "体重": 91, "800米": 215, "坐位体前屈": 12, "立定跳远": 275, "仰卧起坐": 21, "50米": 7.5, "肺活量": 3450},
    {"姓名": "苟燕辉", "性别": "女", "身高": 173, "体重": 63, "800米": 205, "坐位体前屈": 20, "立定跳远": 215, "仰卧起坐": 29, "50米": 8.2, "肺活量": 3200},
    {"姓名": "封秋吉", "性别": "女", "身高": 175, "体重": 70, "800米": 200, "坐位体前屈": 15, "立定跳远": 230, "仰卧起坐": 12, "50米": 7.5, "肺活量": 3100},
    {"姓名": "刁智捷", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "农永彬", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "敖培斌", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "盘智谋", "性别": "男", "身高": 178, "体重": 80, "1000米": 235, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "吕昊晋", "性别": "男", "身高": 178, "体重": 45, "1000米": 178, "坐位体前屈": 9, "立定跳远": 260, "引体向上": 15, "50米": 6.5, "肺活量": 4000},
    {"姓名": "尹于花", "性别": "女", "身高": 168, "体重": 58, "800米": 210, "坐位体前屈": 22, "立定跳远": 180, "仰卧起坐": 35, "50米": 9.0, "肺活量": 2900},
    {"姓名": "钱任杰", "性别": "男", "身高": 185, "体重": 85, "1000米": 210, "坐位体前屈": 14, "立定跳远": 260, "引体向上": 18, "50米": 7.2, "肺活量": 4700},
    {"姓名": "柯新丰", "性别": "男", "身高": 160, "体重": 50, "1000米": 230, "坐位体前屈": 25, "立定跳远": 170, "引体向上": 40, "50米": 9.5, "肺活量": 3600},
    {"姓名": "齐志超", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270, "引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "阳艳平", "性别": "女", "身高": 172, "体重": 62, "800米": 210, "坐位体前屈": 19, "立定跳远": 210, "仰卧起坐": 28, "50米": 8.3, "肺活量": 3150},
    {"姓名": "芦星辉", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "龚顺生", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "龙卫文", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "罗兆南", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "穆世锴", "性别": "男", "身高": 178, "体重": 80, "1000米": 235, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "郑辉辉", "性别": "男", "身高": 168, "体重": 58, "1000米": 220, "坐位体前屈": 22, "立定跳远": 180, "引体向上": 35, "50米": 9.0, "肺活量": 3400},
    {"姓名": "方少东", "性别": "男", "身高": 185, "体重": 85, "1000米": 210, "坐位体前屈": 14, "立定跳远": 260, "引体向上": 18, "50米": 7.2, "肺活量": 4700},
    {"姓名": "姜伏", "性别": "男", "身高": 160, "体重": 50, "1000米": 230, "坐位体前屈": 25, "立定跳远": 170, "引体向上": 40, "50米": 9.5, "肺活量": 3600},
    {"姓名": "成帅岭", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270, "引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "冼江生", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "翁骏", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "焦学民", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "甄文明", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "戚喜良", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "凌煌", "性别": "男", "身高": 178, "体重": 80, "1000米": 235, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "晏碧莲", "性别": "女", "身高": 168, "体重": 58, "800米": 210, "坐位体前屈": 22, "立定跳远": 180, "仰卧起坐": 35, "50米": 9.0, "肺活量": 2900},
    {"姓名": "黄奇志", "性别": "男", "身高": 185, "体重": 85, "1000米": 210, "坐位体前屈": 14, "立定跳远": 260, "引体向上": 18, "50米": 7.2, "肺活量": 4700},
    {"姓名": "钱晓演", "性别": "男", "身高": 160, "体重": 50, "1000米": 230, "坐位体前屈": 25, "立定跳远": 170, "引体向上": 40, "50米": 9.5, "肺活量": 3600},
    {"姓名": "芦永龙", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270, "引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "房三生", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "栗锦贵", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "周继平", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "孙文海", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "杜忠行", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "苟培斌", "性别": "男", "身高": 178, "体重": 80, "1000米": 235, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "欧阳思琦", "性别": "女", "身高": 185, "体重": 85, "800米": 210, "坐位体前屈": 14, "立定跳远": 260, "仰卧起坐": 18, "50米": 7.2, "肺活量": 3300},
    {"姓名": "屈浣英", "性别": "女", "身高": 160, "体重": 50, "800米": 220, "坐位体前屈": 25, "立定跳远": 170, "仰卧起坐": 40, "50米": 9.5, "肺活量": 3000},
    {"姓名": "柏梦龙", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270, "引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "覃洋峰", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "龚飞鸿", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "柴世航", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "向新纯", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "昌龙苗", "性别": "男", "身高": 170, "体重": 60, "1000米": 230, "坐位体前屈": 18, "立定跳远": 200, "引体向上": 25, "50米": 8.2, "肺活量": 3800},
    {"姓名": "陈伟杰", "性别": "男", "身高": 178, "体重": 80, "1000米": 235, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "汪凌志", "性别": "男", "身高": 168, "体重": 58, "1000米": 220, "坐位体前屈": 22, "立定跳远": 180, "引体向上": 35, "50米": 9.0, "肺活量": 3400},
    {"姓名": "谷秋吉", "性别": "女", "身高": 185, "体重": 85, "800米": 210, "坐位体前屈": 14, "立定跳远": 260, "仰卧起坐": 18, "50米": 7.2, "肺活量": 3300},
    {"姓名": "和诗全", "性别": "男", "身高": 160, "体重": 50, "1000米": 230, "坐位体前屈": 25, "立定跳远": 170, "引体向上": 40, "50米": 9.5, "肺活量": 3600},
    {"姓名": "郁双斌", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270, "引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "颜培", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "代洪波", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "陆平生", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190, "引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "岳星辉", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240, "引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "邹亦青", "性别": "女", "身高": 170, "体重": 60, "800米": 210, "坐位体前屈": 18, "立定跳远": 200, "仰卧起坐": 25, "50米": 8.2, "肺活量": 3150},
    {"姓名": "欧梦婷", "性别": "女", "身高": 178, "体重": 80, "800米": 220, "坐位体前屈": 10, "立定跳远": 250, "仰卧起坐": 15, "50米": 8.0, "肺活量": 3400},
    {"姓名": "邝盛", "性别": "男", "身高": 168, "体重": 58, "1000米": 220, "坐位体前屈": 22, "立定跳远": 180, "引体向上": 35, "50米": 9.0, "肺活量": 3400},
    {"姓名": "文星辉", "性别": "男", "身高": 185, "体重": 85, "1000米": 210, "坐位体前屈": 14, "立定跳远": 260, "引体向上": 18, "50米": 7.2, "肺活量": 4700},
    {"姓名": "邬乐平", "性别": "女", "身高": 160, "体重": 50, "800米": 220, "坐位体前屈": 25, "立定跳远": 170, "仰卧起坐": 40, "50米": 9.5, "肺活量": 3000},
    {"姓名": "章满英", "性别": "女", "身高": 190, "体重": 90, "800米": 230, "坐位体前屈": 11, "立定跳远": 270, "仰卧起坐": 20, "50米": 7.6, "肺活量": 3450},
    {"姓名": "舒尚泉", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210, "引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "冷开友", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230, "引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "纪海如", "性别": "女", "身高": 165, "体重": 55, "800米": 210, "坐位体前屈": 20, "立定跳远": 190, "仰卧起坐": 30, "50米": 8.5, "肺活量": 3100},
    {"姓名": "阚素君", "性别": "女", "身高": 180, "体重": 75, "800米": 200, "坐位体前屈": 12, "立定跳远": 240, "仰卧起坐": 10, "50米": 7.8, "肺活量": 3300},
    {"姓名": "骆欢欢", "性别": "女", "身高": 170, "体重": 60, "800米": 210, "坐位体前屈": 18, "立定跳远": 200, "仰卧起坐": 25, "50米": 8.2, "肺活量": 3150},
    {"姓名": "熊鸿世", "性别": "男", "身高": 178, "体重": 80, "1000米": 220, "坐位体前屈": 10, "立定跳远": 250, "引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "屈先宝", "性别": "男", "身高": 168, "体重": 58, "1000米": 220, "坐位体前屈": 22, "立定跳远": 180, "引体向上": 35, "50米": 9.0, "肺活量": 3400},
    {"姓名": "巩钊", "性别": "男", "身高": 185, "体重": 85, "1000米": 210, "坐位体前屈": 14, "立定跳远": 260,"引体向上": 18, "50米": 7.2, "肺活量": 4700},
    {"姓名": "伊贵兰", "性别": "女", "身高": 160, "体重": 50, "800米": 220, "坐位体前屈": 25, "立定跳远": 170,"仰卧起坐": 40, "50米": 9.5, "肺活量": 3000},
    {"姓名": "班准益", "性别": "男", "身高": 190, "体重": 90, "1000米": 220, "坐位体前屈": 11, "立定跳远": 270,"引体向上": 20, "50米": 7.6, "肺活量": 4800},
    {"姓名": "包旻灼", "性别": "男", "身高": 172, "体重": 62, "1000米": 215, "坐位体前屈": 19, "立定跳远": 210,"引体向上": 28, "50米": 8.3, "肺活量": 3950},
    {"姓名": "阚凌峰", "性别": "男", "身高": 175, "体重": 70, "1000米": 210, "坐位体前屈": 15, "立定跳远": 230,"引体向上": 12, "50米": 7.5, "肺活量": 4250},
    {"姓名": "冯晓成", "性别": "男", "身高": 165, "体重": 55, "1000米": 220, "坐位体前屈": 20, "立定跳远": 190,"引体向上": 30, "50米": 8.5, "肺活量": 3900},
    {"姓名": "欧松柏", "性别": "男", "身高": 180, "体重": 75, "1000米": 225, "坐位体前屈": 12, "立定跳远": 240,"引体向上": 10, "50米": 7.8, "肺活量": 4600},
    {"姓名": "伊小艳", "性别": "女", "身高": 170, "体重": 60, "800米": 210, "坐位体前屈": 18, "立定跳远": 200,"仰卧起坐": 25, "50米": 8.2, "肺活量": 3150},
    {"姓名": "桑德", "性别": "男", "身高": 178, "体重": 80, "1000米": 220, "坐位体前屈": 10, "立定跳远": 250,"引体向上": 15, "50米": 8.0, "肺活量": 4100},
    {"姓名": "伊高梅", "性别": "女", "身高": 168, "体重": 58, "800米": 210, "坐位体前屈": 22, "立定跳远": 180,"仰卧起坐": 35, "50米": 9.0, "肺活量": 2900},
    {"姓名": "祁倩男", "性别": "女", "身高": 185, "体重": 85, "800米": 210, "坐位体前屈": 14, "立定跳远": 260,"仰卧起坐": 18, "50米": 7.2, "肺活量": 3300},
    {"姓名": "景红影", "性别": "女", "身高": 160, "体重": 50, "800米": 220, "坐位体前屈": 25, "立定跳远": 170,"仰卧起坐": 40, "50米": 9.5, "肺活量": 3000},
    {"姓名": "郑丽", "性别": "女", "身高": 165, "体重": 50, "800米": 223, "坐位体前屈": 20, "立定跳远": 180,"仰卧起坐": 35, "50米": 8.5, "肺活量": 3100},
    {"姓名": "李玉", "性别": "女", "身高": 170, "体重": 60, "800米": 210, "坐位体前屈": 18, "立定跳远": 200,"仰卧起坐": 25, "50米": 8.2, "肺活量": 3150},
]

# 生成学号函数
def generate_student_ids(data_list):
    year = "2023"
    base_number = 100000  # 基础编号
    for i, data in enumerate(data_list):
        data["学号"] = f"{year}{base_number + i}"  # 学号从 2023100000 开始递增
    return data_list

# 生成带学号的数据
data_list = generate_student_ids(data_list)

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("体测数据汇总")
        self.setGeometry(100, 100, 1030, 800)  # 调整窗口高度
        self.setMinimumSize(1000, 600)  # 设置最小窗口尺寸
        # 设置全局字体
        self.global_font = QFont("Arial", 10)
        QApplication.setFont(self.global_font)
        # 主窗口部件
        main_widget = QWidget()
        main_layout = QVBoxLayout()
        main_layout.setContentsMargins(20, 20, 20, 20)  # 设置外边距
        main_layout.setSpacing(15)  # 设置控件之间的间距

        # 查询区域
        search_widget = QWidget()
        search_layout = QHBoxLayout()
        search_layout.setSpacing(10)  # 设置控件之间的间距

        # 学号输入框
        student_id_label = QLabel("学号：")
        student_id_label.setFont(self.global_font)
        search_layout.addWidget(student_id_label)
        self.student_id_input = QLineEdit()
        self.student_id_input.setPlaceholderText("请输入学号")
        self.student_id_input.setFont(self.global_font)
        self.student_id_input.setMaximumWidth(150)  # 限制输入框最大宽度
        search_layout.addWidget(self.student_id_input)

        # 或字标签
        or_label = QLabel("或")
        or_label.setAlignment(Qt.AlignCenter)
        or_label.setFont(QFont("Arial", 10, QFont.Bold))  # 加粗字体
        search_layout.addWidget(or_label)

        # 姓名输入框
        name_label = QLabel("姓名：")
        name_label.setFont(self.global_font)
        search_layout.addWidget(name_label)
        self.name_input = QLineEdit()
        self.name_input.setPlaceholderText("请输入姓名")
        self.name_input.setFont(self.global_font)
        self.name_input.setMaximumWidth(150)  # 限制输入框最大宽度
        search_layout.addWidget(self.name_input)

        # 查询按钮
        search_button = QPushButton("查询")
        search_button.setFont(QFont("Arial", 10, QFont.Bold))
        search_button.setStyleSheet("background-color: #4CAF50; color: white;")
        search_button.clicked.connect(self.search_data)
        search_layout.addWidget(search_button)

        # 右侧详细信息区域
        details_widget = QWidget()
        details_layout = QVBoxLayout()
        details_layout.setSpacing(5)

        # 标题
        details_title = QLabel("详细信息（双击列表显示）")
        details_title.setFont(QFont("Arial", 10, QFont.Bold))
        details_title.setAlignment(Qt.AlignCenter)
        details_title.setStyleSheet("color: #333;")
        details_layout.addWidget(details_title)

        # 详细信息标签
        self.details_labels = []
        for _ in range(13):  # 预留12个标签位置
            label = QLabel("")
            label.setFont(QFont("Arial", 9))
            label.setStyleSheet("color: #555;")
            details_layout.addWidget(label)
            self.details_labels.append(label)

        details_widget.setLayout(details_layout)
        search_layout.addWidget(details_widget)

        # 添加拉伸因子，避免输入框占据过多空间
        search_layout.addStretch()

        # 设置查询区域布局
        search_widget.setLayout(search_layout)
        main_layout.addWidget(search_widget)

        # 性别筛选区域
        gender_filter_widget = QWidget()
        gender_filter_layout = QHBoxLayout()
        gender_filter_layout.setSpacing(20)  # 设置控件之间的间距

        # 性别多选框
        self.male_checkbox = QCheckBox("男生")
        self.male_checkbox.setFont(self.global_font)
        gender_filter_layout.addWidget(self.male_checkbox)
        self.female_checkbox = QCheckBox("女生")
        self.female_checkbox.setFont(self.global_font)
        gender_filter_layout.addWidget(self.female_checkbox)

        # 检索结果提示标签
        self.result_label = QLabel("共检索到 0 条数据")
        self.result_label.setFont(self.global_font)
        self.result_label.setStyleSheet("color: gray;")
        gender_filter_layout.addWidget(self.result_label)

        # 添加拉伸因子，避免控件过于紧凑
        gender_filter_layout.addStretch()

        # 设置性别筛选区域布局
        gender_filter_widget.setLayout(gender_filter_layout)
        main_layout.addWidget(gender_filter_widget)

        # 数据表格
        self.table = QTableWidget()
        self.table.setColumnCount(13)  # 表格列数
        self.table.setHorizontalHeaderLabels([
            "学号", "姓名", "性别", "身高(cm)", "体重(kg)", "1000米(分:秒)", "800米(分:秒)",
            "坐位体前屈(cm)", "立定跳远(cm)", "引体向上(次)", "仰卧起坐(次)", "50米(s)","肺活量(ml)"
        ])
        self.table.setSortingEnabled(True)  # 启用排序功能
        self.table.setAlternatingRowColors(True)  # 设置交替行颜色
        self.table.setStyleSheet("""
            QHeaderView::section { background-color: #f0f0f0; font-weight: bold; }
            QTableWidget { gridline-color: #d0d0d0; }
        """)  # 美化表格样式
        self.load_all_data()  # 初始加载所有数据
        self.table.cellClicked.connect(self.show_row_details)
        main_layout.addWidget(self.table)

        # 设置主窗口的中心部件
        main_widget.setLayout(main_layout)
        self.setCentralWidget(main_widget)

    def format_time(self, seconds):
        """将秒数转换为几分几秒的格式"""
        if seconds == "N/A":
            return "N/A"
        minutes = seconds // 60
        remaining_seconds = seconds % 60
        return f"{minutes}分{remaining_seconds:02d}秒"

    def load_all_data(self):
        """加载所有数据到表格"""
        self.display_data(data_list)

    def display_data(self, data_list):
        """显示数据到表格，并更新检索结果提示"""
        self.table.setRowCount(len(data_list))
        for row, data in enumerate(data_list):
            self.table.setItem(row, 0, QTableWidgetItem(data["学号"]))
            self.table.setItem(row, 1, QTableWidgetItem(data["姓名"]))
            self.table.setItem(row, 2, QTableWidgetItem(data["性别"]))  # 显示性别
            self.table.setItem(row, 3, QTableWidgetItem(str(data["身高"])))
            self.table.setItem(row, 4, QTableWidgetItem(str(data["体重"])))
            # 动态处理1000米和800米时间字段
            if data["性别"] == "男":
                self.table.setItem(row, 5, QTableWidgetItem(self.format_time(data.get("1000米", "N/A"))))
                self.table.setItem(row, 6, QTableWidgetItem("N/A"))  # 男生无800米
            else:
                self.table.setItem(row, 5, QTableWidgetItem("N/A"))  # 女生无1000米
                self.table.setItem(row, 6, QTableWidgetItem(self.format_time(data.get("800米", "N/A"))))
            self.table.setItem(row, 7, QTableWidgetItem(str(data["坐位体前屈"])))
            self.table.setItem(row, 8, QTableWidgetItem(str(data["立定跳远"])))
            # 动态处理引体向上和仰卧起坐
            if data["性别"] == "男":
                self.table.setItem(row, 9, QTableWidgetItem(str(data.get("引体向上", "N/A"))))
                self.table.setItem(row, 10, QTableWidgetItem("N/A"))  # 女生无引体向上
            else:
                self.table.setItem(row, 9, QTableWidgetItem("N/A"))  # 男生无仰卧起坐
                self.table.setItem(row, 10, QTableWidgetItem(str(data.get("仰卧起坐", "N/A"))))
            self.table.setItem(row, 11, QTableWidgetItem(f"{data['50米']}"))  # 直接显示秒数
            self.table.setItem(row, 12, QTableWidgetItem(f"{data['肺活量']}"))
        # 自动调整列宽
        self.table.resizeColumnsToContents()
        # 更新检索结果提示
        self.result_label.setText(f"共检索到 {len(data_list)} 条数据")

    def search_data(self):
        """根据学号、姓名和性别筛选数据"""
        student_id = self.student_id_input.text().strip()
        name = self.name_input.text().strip()
        include_male = self.male_checkbox.isChecked()
        include_female = self.female_checkbox.isChecked()
        # 筛选符合条件的数据
        matched_data = []
        for data in data_list:
            if (not student_id or student_id == data["学号"]) and \
                    (not name or name in data["姓名"]) and \
                    ((include_male and data["性别"] == "男") or (include_female and data["性别"] == "女") or (
                            not include_male and not include_female)):
                matched_data.append(data)

        # 更新表格和检索结果提示
        self.display_data(matched_data)

    def show_row_details(self, row, column):
        """显示当前行的详细信息"""
        if row >= 0:  # 确保点击的是有效行
            # 清空之前的详细信息
            for label in self.details_labels:
                label.setText("")

            # 直接从表格中读取数据
            details = [
                f"学号: {self.table.item(row, 0).text()}",
                f"姓名: {self.table.item(row, 1).text()}",
                f"性别: {self.table.item(row, 2).text()}",
                f"身高: {self.table.item(row, 3).text()}cm",
                f"体重: {self.table.item(row, 4).text()}kg",
                f"1000米: {self.table.item(row, 5).text()}",
                f"800米: {self.table.item(row, 6).text()}",
                f"坐位体前屈: {self.table.item(row, 7).text()}cm",
                f"立定跳远: {self.table.item(row, 8).text()}cm",
                f"引体向上: {self.table.item(row, 9).text()}个",
                f"仰卧起坐: {self.table.item(row, 10).text()}个",
                f"50米: {self.table.item(row, 11).text()}秒",
                f"肺活量: {self.table.item(row, 12).text()}ml"
            ]

            # 显示新的详细信息
            for i, detail in enumerate(details):
                if i < len(self.details_labels):
                    self.details_labels[i].setText(detail)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec())